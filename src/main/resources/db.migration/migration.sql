INSERT INTO questions(question_test, correct_answer, incorrect_answer_one, incorrect_answer_two, incorrect_answer_three)
VALUES ('Какие операции входят в DDL?',
        'ALTER', 'SELECT', 'DROP', 'DELETE'),

       ('Какой оператор используется для определения диапазона значений?',
        'BETWEEN', 'IN', 'LIKE', 'LIMIT'),

       ('В каких случаях лучше использовать подзапросы?'
           , 'Когда нужно вычислять агрегатные значения',
        'Когда список выбора SELECT содержит столбцы более чем из одной таблицы',
        'Всегда', 'Когда список выбора WHERE содержит столбцы более чем из одной таблицы'),

       ('UPDATE Customers ... ContactName = ''Meder Tynychbekov'', City= ''Bishkek'' WHERE CustomerID = 1;',
        'SET', 'PUT', 'INSERT', 'UPDATE'),

       ('Для чего нужна денормализация базы данных?',
        'Для повышения производительности и скорости извлечения данных',
        'Для уменьшение потенциальной противоречивости хранимой в базе данных информации',
        'Для создание каких-то временных промежуточных выборок из нескольких таблиц',
        'Для хранения целого числа'),

       ('Перечислите ограничения (constraints)?', 'CHECK', 'MIN', 'LIMIT', 'UNIQUE'),

       ('Null в SQL это?',
        'Равно на Null', 'Равно на false', 'Равно на Null!', 'Равно на false'),

       ('Перечислите агрегатные функции...',
        'COUNT', 'CONCAT', 'UNIQUE', 'DEFAULT'),

       ('Какие операции входят в TCL?',
        'COMMIT', 'SAVEPOINT', 'SELECT', 'TRUNCATE'),

       (' SELECT * ... Customers WHERE Country=''Germany'' ... City=''Berlin'';',
        'FROM, AND', 'WHERE, LIKE', 'ALL, AND', 'FROM, LIKE'),

       ('Что такое изолированность (isolation)?',
        'Во время выполнения транзакции параллельные транзакции не должны оказывать влияние на ее результат',
        'Независимо от проблем изменения, сделанные успешно завершённой транзакцией, должны остаться сохраненными после возвращения системы в работу',
        'Транзакция, достигающая своего завершения и фиксирующая свои результаты, сохраняет согласованность базы данных',
        'Гарантирует, что транзакция будет полностью выполнена или потерпит неудачу, где транзакция представляет одну логическую операцию данных'),

       ('Можно сделать запрос из двух баз если они не на одном сервере?',
        'НЕТ', 'ДА', 'НЕ ЗНАЮ', 'ПРЕДПОЛОГАЮ И ТО И ДРУГОЕ'),

       ('... * FROM Customers;', 'SELECT', 'INSERT', 'TABLE', 'DROP'),

       ('Что такое DISTINCT?',
        'Указывает, что для вычислений используются только уникальные значения столбца',
        'Ограничивает выборку заданным числом', 'Замещает последовательность любого числа символами',
        'Позволяет осуществить слияние данных одной таблицы с данными другой таблицы'),

       ('Какой из этих join''ов является симметричными?',
        'INNER JOIN', 'FULL JOIN', 'RIGHT JOIN', 'LEFT JOIN'),

       ('Что такое LIMIT?',
        'Ограничивает выборку заданным числом', 'Определяет диапазон значений',
        'Указывает, что для вычислений используются только уникальные значения столбца',
        'Определяет набор значений'),

       ('Что такое долговечность (durability)?',
        'Независимо от проблем изменения, сделанные успешно завершённой транзакцией, должны остаться сохраненными после возвращения системы в работу',
        'Гарантирует, что транзакция будет полностью выполнена или потерпит неудачу, где транзакция представляет одну логическую операцию данных',
        'Транзакция, достигающая своего завершения и фиксирующая свои результаты, сохраняет согласованность базы данных',
        'Во время выполнения транзакции параллельные транзакции не должны оказывать влияние на ее результат'),

    ('Какие операции входят в DCL?',
        'REVOKE', 'COMMIT', 'ROLLBACK', 'DENY'),

       ('Что такое шардирование база данных?',
        'Это когда мы одну большую БД разделяем на много маленьких по какому-либо принципу', 'Честно, не знаю',
        'Это когда мы объединяем много маленьких БД на одну большую БД', 'Все варианты'),

       ('Что такое атомарность (atomocity)?',
        'Гарантирует, что транзакция будет полностью выполнена или потерпит неудачу, где транзакция представляет одну логическую операцию данных',
        'Транзакция, достигающая своего завершения и фиксирующая свои результаты, сохраняет согласованность базы данных',
        'Во время выполнения транзакции параллельные транзакции не должны оказывать влияние на ее результат.',
        'Независимо от проблем (к примеру, потеря питания, сбой или ошибки любого рода) изменения, сделанные успешно завершённой транзакцией, должны остаться сохраненными после возвращения системы в работу'),

       ('При использовании UNION гарантирует порядок записей из двух таблиц?',
        'Нет', 'Да', 'Всё', 'Честно не знаю'),

       ('Что такое GROUP BY?', 'Cоздает отдельную группу для всех возможных значений',
        'Указывает, что для вычислений используются только уникальные значения столбца',
        'Упорядочивает вывод запроса согласно значениям в том или ином количестве выбранных столбцов',
        'Применяется для объединения результатов двух SQL-запросов в единую таблицу'),

       ('Как создается временная таблица?', 'CREATE TABLE #temporary_table',
        'CREATE TABLE $temporary_table', 'CREATE TABLE %temporary_table',
        'CREATE TABLE temporary_table#'),

    ('После какого оператора нельзя будет восстановить данные?', 'TRUNCATE',
        'DROP CASCADE', 'DELETE', 'ALTER'),

       ('Какие операции входят в DML?', 'UPDATE', 'INSERT', 'TRUNCATE', 'COMMIT'),
       ('Выберите не реляционные база данных...',
        'MongoDB', 'PostgreSQL', 'Redis', 'MySQL'),
       ('Какой оператор нельзя использовать вместе с агрегатными функциями?', 'WHERE', 'HAVING', 'GROUP BY',
        'ORDER BY'),

       ('Что такое ORDER BY?',
        'Упорядочивает вывод запроса согласно значениям в том или ином количестве выбранных столбцов',
        'Используется для агрегации записей результата по заданным атрибутам',
        'Позволяет осуществить слияние данных одной таблицы с данными другой таблицы',
        'Ограничивает выборку заданным числом'),
       ('Какой метод настройки позволяет быстрее извлекать записи из таблицы?', 'INDEX', 'EXISTS', 'GRANT',
        'SAVEPOINT'),
       ('Что такое согласованность (consistency)?',
        'Транзакция, достигающая своего завершения и фиксирующая свои результаты, сохраняет согласованность базы данных',
        'Независимо от проблем изменения, сделанные успешно завершённой транзакцией, должны остаться сохраненными после возвращения системы в работу',
        'Гарантирует, что транзакция будет полностью выполнена или потерпит неудачу, где транзакция представляет одну логическую операцию данных',
        'Во время выполнения транзакции параллельные транзакции не должны оказывать влияние на ее результат');



-- VALUES ('Чем можно заменить лямбда-выражение?', 'Анонимный класс', 'Stream API', 'Локальный класс',
--         'Функциональный интерфейс'),
--        ('Начальная емкость (default capacity) LinkedList?', '0', '10', '11', '16'),
--        ('При итерации по ArrayList что будет если удалить элемент?', 'Будет ConcurrentModificationException',
--         'Ничего не будет', 'Будет IllegalStateException', 'Будет ClassCastException'),
--        ('Какой из этих функциональных интерфейсов реализует функцию, получающая на вход два экземпляра класса T и возвращающая на выходе экземпляр класса T',
--         'BinaryOperator', 'Supplier', 'Function', 'Predicate'),
--        ('Почему Map не Collection?', 'Совокупность пар ключ и значение', 'Совокупность ключей ',
--         'Совокупность всех элементов',
--         'Совокупность значений'),
--        ('Какой класс с самым полным объемом информации о временном контексте в календарной системе ISO-8601?',
--         'ZonedDateTime',
--         'LocalDate', 'DateTime', 'LocalDateTime'),
--        ('В какой версии Java появились дженерики?', '5', '1', '8', '15'),
--        ('Можно ли создать стрим из коллекции?', 'Да', 'Нет', 'Даже не знаю', 'Вопрос не правильно'),
--        ('Если мы объявили wildcard с extends?', 'То это producer', 'То это predicate', 'То это consumer',
--         'То это function'),
--        ('Что рекомендуется использовать вместо устаревшего Stack?', 'Deque', 'Queue', 'Vector', 'LinkedList'),
--        ('Что такое стрим(Stream API)?',
--         'Последовательность элементов, над которой можно производить различные операции',
--         'Это позволяет нам ссылаться на конструкторы или методы, не выполняя их',
--         'Коллекция, предназначен для хранения элементов в порядке, нужном для их обработки',
--         'Упрощённая запись анонимного класса, реализующего функциональный интерфейс'),
--        ('Что делает trimToSize()?', 'Сжимает массив', 'Определяет размер массива', 'Расширяет массив',
--         'Удаляет массив'),
--        ('Что такое Generic?', 'Параметризованные типы', 'Сырые типы', 'Это типы без указания типа в фигурных скобках',
--         'Неопределенные типы'),
--        ('Начальная емкость (default capacity) LinkedHashSet?', '16', '0', '12', '10'),
--        ('Начальная емкость (default capacity) ArrayList?', '10', '16', '11', '0'),
--        ('У функциональных интерфейсов могут быть другие не абстрактные методы?', 'Да', 'Нет', 'И то и другое',
--         'Не знаю'),
--        ('Из какого интерфейса реализуются все коллекции по иерархии?', 'Iterable', 'Collection', 'Throwable', 'Map'),
--        ('Что такое ссылка на метод (method references)?', 'Это сокращенный синтаксис выражения лямбда',
--         'Это сокращенный синтаксис выражения стримов', 'Это сокращенный синтаксис выражения переменной',
--         'Это сокращенный синтаксис выражения массива'),
--        ('Какой класс используем  во избежание NullPointerException?', 'Optional', 'Collectors', 'NotNull', 'Object'),
--        ('Какая коллекция применяет красное/черное дерево?', 'TreeSet', 'LinkedList', 'HashMap', 'HashSet');
